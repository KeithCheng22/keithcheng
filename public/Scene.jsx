/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf 
Author: hectopod (https://sketchfab.com/hectopod)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/forest-in-a-jar-terrarium-4dca1b2513394d0fa0ed12041ff30ddc
Title: Forest In a Jar - Terrarium
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {

  const ref = useRef()

  const [isHovered, setIsHovered] = useState(false)

  const { nodes, materials } = useGLTF('/scene.gltf')

  useFrame(() => {
    ref.current.rotation.y += isHovered ? 0.05 : 0.01
})

  return (
    <group className='cursor-pointer' ref={ref} {...props} dispose={null} onPointerEnter={() => (setIsHovered(true), document.body.style.cursor='pointer')} onPointerLeave={() => (setIsHovered(false), document.body.style.cursor='default')}>
      <group  position={[0, -0.35, 0]}  scale={[1.011, 0.545, 1.011]}>
        <mesh geometry={nodes.Object_4.geometry} material={materials.glass} />
        <mesh geometry={nodes.Object_5.geometry} material={materials['rocks.001']} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.cork} />
        <mesh geometry={nodes.Object_7.geometry} material={materials['terrain.001']} />
        <mesh geometry={nodes.Object_8.geometry} material={materials['ground.001']} />
        <mesh geometry={nodes.Object_9.geometry} material={materials['plant.001']} />
        <mesh geometry={nodes.Object_10.geometry} material={materials.plant} />
        <mesh geometry={nodes.Object_11.geometry} material={materials['glass.Wet.001']} />
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
